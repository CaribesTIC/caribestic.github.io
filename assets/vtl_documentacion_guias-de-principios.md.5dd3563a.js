import{_ as e,c as a,o as s,a as n}from"./app.d3783ab4.js";const b='{"title":"Gu\xEDas de Principios","description":"","frontmatter":{},"headers":[],"relativePath":"vtl/documentacion/guias-de-principios.md"}',o={},i=n('<h1 id="guias-de-principios" tabindex="-1">Gu\xEDas de Principios <a class="header-anchor" href="#guias-de-principios" aria-hidden="true">#</a></h1><blockquote><p><a href="https://twitter.com/kentcdodds/status/977018512689455106" target="_blank" rel="noopener noreferrer">Cuanto m\xE1s se parezcan sus pruebas a la forma en que se usa su software, m\xE1s confianza le pueden brindar.</a></p></blockquote><p>Solo tratamos de exponer m\xE9todos y utilidades que lo animen a escribir pruebas que se parezcan mucho a c\xF3mo se usan sus p\xE1ginas web.</p><p>Las utilidades se incluyen en este proyecto en base a las siguientes gu\xEDas de principios:</p><ol><li>Si se relaciona con la renderizaci\xF3n de componentes, entonces deber\xEDa tratar con nodos DOM en lugar de instancias de componentes, y no deber\xEDa fomentar el manejo de instancias de componentes.</li><li>En general, deber\xEDa ser \xFAtil para probar los componentes de la aplicaci\xF3n en la forma en que el usuario los usar\xEDa. Estamos haciendo algunas compensaciones aqu\xED porque estamos usando una computadora y, a menudo, un entorno de navegador simulado, pero en general, las utilidades deber\xEDan alentar las pruebas que usan los componentes de la forma en que est\xE1n destinados a ser utilizados.</li><li>Las implementaciones de utilidades y las API deben ser simples y flexibles.</li></ol><p>Al final del d\xEDa, lo que queremos es que esta biblioteca sea bastante liviana, simple y comprensible.</p>',6),r=[i];function t(l,d,c,u,p,m){return s(),a("div",null,r)}var f=e(o,[["render",t]]);export{b as __pageData,f as default};
