import{_ as n,c as s,o as a,a as t}from"./app.1bf5b695.js";const g='{"title":"Probando Propiedades","description":"","frontmatter":{},"headers":[{"level":2,"title":"Establecer Propiedades","slug":"establecer-propiedades"},{"level":2,"title":"Creando el componente","slug":"creando-el-componente"},{"level":2,"title":"La Primera Prueba","slug":"la-primera-prueba"},{"level":2,"title":"Una Segunda Prueba.","slug":"una-segunda-prueba"},{"level":2,"title":"Refactorizando las pruebas","slug":"refactorizando-las-pruebas"},{"level":2,"title":"Refactorizar con una Funci\xF3n de F\xE1brica","slug":"refactorizar-con-una-funcion-de-fabrica"},{"level":2,"title":"Conclusi\xF3n","slug":"conclusion"}],"relativePath":"vth/probando-propiedades.md"}',p={},o=t(`<h1 id="probando-propiedades" tabindex="-1">Probando Propiedades <a class="header-anchor" href="#probando-propiedades" aria-hidden="true">#</a></h1><h2 id="establecer-propiedades" tabindex="-1">Establecer Propiedades <a class="header-anchor" href="#establecer-propiedades" aria-hidden="true">#</a></h2><p>Las <code>props</code> se pueden usar tanto <code>mount</code> como <code>shallowMount</code>. A menudo se usa para probar componentes que reciben propiedades de su componente principal.</p><p><code>props</code> se pasa al segundo argumento de <code>shallowMount</code> o <code>mount</code>, de la siguiente forma:</p><div class="language-js"><pre><code><span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="creando-el-componente" tabindex="-1">Creando el componente <a class="header-anchor" href="#creando-el-componente" aria-hidden="true">#</a></h2><p>Cree un componente <code>&lt;SubmitButton&gt;</code> simple que tenga dos propiedades: <code>msg</code> e <code>isAdmin</code>. Seg\xFAn el valor de la propiedad <code>isAdmin</code>, este componente contendr\xE1 un <code>&lt;span&gt;</code> en uno de dos estados:</p><ul><li>No autorizado si <code>isAdmin</code> es falso (o no se pasa como propiedad)</li><li>Privilegios de administrador si <code>isAdmin</code> es verdadero</li></ul><h2 id="la-primera-prueba" tabindex="-1">La Primera Prueba <a class="header-anchor" href="#la-primera-prueba" aria-hidden="true">#</a></h2><p>Haremos una afirmaci\xF3n en el mensaje en caso de que el usuario no tenga privilegios de administrador.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/test-utils&#39;</span>
<span class="token keyword">import</span> SubmitButton <span class="token keyword">from</span> <span class="token string">&#39;@/components/SubmitButton.vue&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;SubmitButton.vue&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;displays a non authorized message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token string">&quot;submit&quot;</span>
    <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>SubmitButton<span class="token punctuation">,</span><span class="token punctuation">{</span>
      <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> msg
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;Not Authorized&quot;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;submit&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>Al ejecute las pruebas, el resultado ser\xE1:</p><div class="language-"><pre><code>PASS  tests/unit/SubmitButton.spec.js
  SubmitButton.vue
    \u2713 displays a non authorized message (15ms)
</code></pre></div><p>El resultado de <code>console.log(wrapper.html())</code> tambi\xE9n se imprime:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Not Authorized<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>
    submit
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Podemos ver que la propiedad <code>msg</code> se procesa y el marcado resultante se renderiza correctamente.</p><h2 id="una-segunda-prueba" tabindex="-1">Una Segunda Prueba. <a class="header-anchor" href="#una-segunda-prueba" aria-hidden="true">#</a></h2><p>Hagamos una afirmaci\xF3n sobre el otro estado posible, cuando <code>isAdmin</code> es <code>true</code>:</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/test-utils&#39;</span>
<span class="token keyword">import</span> SubmitButton <span class="token keyword">from</span> <span class="token string">&#39;@/components/SubmitButton.vue&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;SubmitButton.vue&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;displays a admin privileges message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token string">&quot;submit&quot;</span>
    <span class="token keyword">const</span> isAdmin <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>SubmitButton<span class="token punctuation">,</span><span class="token punctuation">{</span>
      <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        msg<span class="token punctuation">,</span>
        isAdmin
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;Admin Privileges&quot;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;submit&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>Ejecute la prueba y verifique los resultados:</p><div class="language-"><pre><code>PASS  tests/unit/SubmitButton.spec.js
  SubmitButton.vue
    \u2713 displays a admin privileges message (4ms)
</code></pre></div><p>Tambi\xE9n generamos el marcado con <code>console.log(wrapper.html())</code>:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Admin Privileges<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>
    submit
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Podemos ver que se us\xF3 la propiedad <code>isAdmin</code> para renderizar el elemento <code>&lt;span&gt;</code> correcto.</p><h2 id="refactorizando-las-pruebas" tabindex="-1">Refactorizando las pruebas <a class="header-anchor" href="#refactorizando-las-pruebas" aria-hidden="true">#</a></h2><p>Refactoricemos las pruebas siguiendo el principio <em>&quot;Don&#39;t Repeat Yourself&quot;</em> (DRY). Dado que todas las pruebas est\xE1n pasando, podemos refactorizar con confianza. Mientras todas las pruebas pasen despu\xE9s de la refactorizaci\xF3n, podemos estar seguros de que no rompimos nada.</p><h2 id="refactorizar-con-una-funcion-de-fabrica" tabindex="-1">Refactorizar con una Funci\xF3n de F\xE1brica <a class="header-anchor" href="#refactorizar-con-una-funcion-de-fabrica" aria-hidden="true">#</a></h2><p>En ambas pruebas, llamamos a <code>mount</code> y luego pasamos un objeto <code>props</code> similar. Podemos refactorizar esto usando una funci\xF3n de f\xE1brica. Una funci\xF3n de f\xE1brica es simplemente una funci\xF3n que devuelve un objeto: <em>crea</em> objetos, de ah\xED el nombre de funci\xF3n de &quot;f\xE1brica&quot;.</p><div class="language-js"><pre><code><span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token string">&quot;submit&quot;</span>
<span class="token keyword">const</span> <span class="token function-variable function">factory</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">mount</span><span class="token punctuation">(</span>SubmitButton<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      msg<span class="token punctuation">,</span>
      <span class="token operator">...</span>props
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Lo anterior es una funci\xF3n que montar\xE1 un componente <code>SubmitButton</code>. Podemos pasar cualquier propiedad para cambiar como primer argumento a la f\xE1brica. Vamos a <em>DRY up</em> la prueba con la funci\xF3n de f\xE1brica.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/test-utils&#39;</span>
<span class="token keyword">import</span> SubmitButton <span class="token keyword">from</span> <span class="token string">&#39;@/components/SubmitButton.vue&#39;</span>

<span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token string">&quot;submit&quot;</span>
<span class="token keyword">const</span> <span class="token function-variable function">factory</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// omitted for brevity ...</span>
<span class="token punctuation">}</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;SubmitButton&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;does not have admin privileges&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;renders a message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

      <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;Not Authorized&quot;</span><span class="token punctuation">)</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;submit&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;has admin privileges&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;renders a message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">isAdmin</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;Admin Privileges&quot;</span><span class="token punctuation">)</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;submit&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>Hagamos las pruebas de nuevo. Todo sigue pasando.</p><div class="language-"><pre><code>PASS  tests/unit/SubmitButton.spec.js
 SubmitButton
   has admin privileges
     \u2713 renders a message (26ms)
   does not have admin privileges
     \u2713 renders a message (3ms)
</code></pre></div><p>Como tenemos un buen conjunto de pruebas, ahora podemos refactorizar con facilidad y confianza.</p><h2 id="conclusion" tabindex="-1">Conclusi\xF3n <a class="header-anchor" href="#conclusion" aria-hidden="true">#</a></h2><ul><li>Al pasar <code>props</code> al montar un componente, puede establecer las <code>props</code> que se utilizar\xE1n en la prueba</li><li>Las funciones de f\xE1brica se pueden usar para _DRY sus pruebas</li><li>En lugar de <code>props</code>, tambi\xE9n puedes usar <a href="https://test-utils.vuejs.org/api/#setprops" target="_blank" rel="noopener noreferrer"><code>setProps</code></a> para establecer valores de propiedades durante las pruebas</li></ul>`,36),e=[o];function c(u,i,l,r,k,d){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{g as __pageData,f as default};
